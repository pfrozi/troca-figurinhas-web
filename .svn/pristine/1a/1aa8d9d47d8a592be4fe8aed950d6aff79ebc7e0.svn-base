using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using TrocaFigurinhas.Models.Persistence;
using TrocaFigurinhas.Models.ModelView;
using System.Data.Objects;

namespace TrocaFigurinhas.Models.Business
{
    public class OfertasBusiness
    {

        public List<Ofertas> BuscarOfertadasPorNome(string user, string nomeFigurinha)
        {
            List<Ofertas> ofertas;
            using (ModelDBFigurinhasContainer contexto = new ModelDBFigurinhasContainer())
            {
                var qOferta = from Oferta in contexto.OfertasSet
                              join ofertada in contexto.FigurinhasOfertadasSet
                                on Oferta.Id equals ofertada.OfertasId
                              where ofertada.Figurinha.Nome.Contains(nomeFigurinha)
                                 && Oferta.Usuario.Login.ToLower() != user.ToLower()

                              select Oferta;

                qOferta = ((ObjectQuery<Ofertas>)qOferta
                                 .Where(a => a.TrocasSolicitado == null || !a.TrocasSolicitado.TrocaRealizada))  // Ainda não houve trocas efetivas
                                 .Include("Usuario")
                                 .Include("FigurinhasDesejadas")
                                 .Include("FigurinhasOfertadas")
                                 .Include("FigurinhasDesejadas.Figurinha")
                                 .Include("FigurinhasOfertadas.Figurinha")
                                 .Include("FigurinhasDesejadas.Figurinha.Album")
                                 .Include("FigurinhasOfertadas.Figurinha.Album")
                                 .Include("FigurinhasDesejadas.Figurinha.Imagem")
                                 .Include("FigurinhasOfertadas.Figurinha.Imagem"); 

                ofertas = qOferta.ToList();
            }

            if (ofertas.Count == 0)
            {
                throw new BusinessException("Nenhuma oferta encontrada.");
            }

            return ofertas;
        }

        public List<Ofertas> BuscarDesejadasPorNome(string user, string nomeFigurinha)
        {
            List<Ofertas> ofertas;
            using (ModelDBFigurinhasContainer contexto = new ModelDBFigurinhasContainer())
            {
                var qOferta = from Oferta in contexto.OfertasSet
                              join Desejada in contexto.FigurinhasDesejadasSet
                                on Oferta.Id equals Desejada.OfertasId
                              where Desejada.Figurinha.Nome.Contains(nomeFigurinha)
                                 && Oferta.Usuario.Login.ToLower() != user.ToLower()

                              select Oferta;

                qOferta = ((ObjectQuery<Ofertas>)qOferta
                                 .Where(a => a.TrocasSolicitado == null || !a.TrocasSolicitado.TrocaRealizada))  // Ainda não houve trocas efetivas
                                 .Include("Usuario")
                                 .Include("FigurinhasDesejadas")
                                 .Include("FigurinhasOfertadas")
                                 .Include("FigurinhasDesejadas.Figurinha")
                                 .Include("FigurinhasOfertadas.Figurinha")
                                 .Include("FigurinhasDesejadas.Figurinha.Album")
                                 .Include("FigurinhasOfertadas.Figurinha.Album")
                                 .Include("FigurinhasDesejadas.Figurinha.Imagem")
                                 .Include("FigurinhasOfertadas.Figurinha.Imagem"); 

                ofertas = qOferta.ToList();
            }

            if (ofertas.Count == 0)
            {
                throw new BusinessException("Nenhuma oferta encontrada.");
            }

            return ofertas;
        }
    }
}