//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ModelDBFigurinhas", "UsuariosOfertas", "Usuarios", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrocaFigurinhas.Models.Persistence.Usuario), "Ofertas", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrocaFigurinhas.Models.Persistence.Ofertas))]
[assembly: EdmRelationshipAttribute("ModelDBFigurinhas", "AlbumFigurinha", "Album", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrocaFigurinhas.Models.Persistence.Album), "Figurinha", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrocaFigurinhas.Models.Persistence.Figurinha))]
[assembly: EdmRelationshipAttribute("ModelDBFigurinhas", "FigurinhaImagem", "Figurinha", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrocaFigurinhas.Models.Persistence.Figurinha), "Imagem", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TrocaFigurinhas.Models.Persistence.Imagem))]
[assembly: EdmRelationshipAttribute("ModelDBFigurinhas", "OfertasTrocas", "Ofertas", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrocaFigurinhas.Models.Persistence.Ofertas), "Trocas", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TrocaFigurinhas.Models.Persistence.Trocas))]
[assembly: EdmRelationshipAttribute("ModelDBFigurinhas", "OfertasTrocas1", "Ofertas", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrocaFigurinhas.Models.Persistence.Ofertas), "Trocas", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TrocaFigurinhas.Models.Persistence.Trocas))]
[assembly: EdmRelationshipAttribute("ModelDBFigurinhas", "FigurinhasOfertadasFigurinha", "FigurinhasOfertadas", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrocaFigurinhas.Models.Persistence.FigurinhasOfertadas), "Figurinha", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrocaFigurinhas.Models.Persistence.Figurinha))]
[assembly: EdmRelationshipAttribute("ModelDBFigurinhas", "FigurinhasDesejadasFigurinha", "FigurinhasDesejadas", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrocaFigurinhas.Models.Persistence.FigurinhasDesejadas), "Figurinha", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrocaFigurinhas.Models.Persistence.Figurinha))]
[assembly: EdmRelationshipAttribute("ModelDBFigurinhas", "OfertasFigurinhasOfertadas", "Ofertas", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrocaFigurinhas.Models.Persistence.Ofertas), "FigurinhasOfertadas", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrocaFigurinhas.Models.Persistence.FigurinhasOfertadas), true)]
[assembly: EdmRelationshipAttribute("ModelDBFigurinhas", "OfertasFigurinhasDesejadas", "Ofertas", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TrocaFigurinhas.Models.Persistence.Ofertas), "FigurinhasDesejadas", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TrocaFigurinhas.Models.Persistence.FigurinhasDesejadas), true)]

#endregion

namespace TrocaFigurinhas.Models.Persistence
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ModelDBFigurinhasContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ModelDBFigurinhasContainer object using the connection string found in the 'ModelDBFigurinhasContainer' section of the application configuration file.
        /// </summary>
        public ModelDBFigurinhasContainer() : base("name=ModelDBFigurinhasContainer", "ModelDBFigurinhasContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ModelDBFigurinhasContainer object.
        /// </summary>
        public ModelDBFigurinhasContainer(string connectionString) : base(connectionString, "ModelDBFigurinhasContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ModelDBFigurinhasContainer object.
        /// </summary>
        public ModelDBFigurinhasContainer(EntityConnection connection) : base(connection, "ModelDBFigurinhasContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Figurinha> FigurinhaSet
        {
            get
            {
                if ((_FigurinhaSet == null))
                {
                    _FigurinhaSet = base.CreateObjectSet<Figurinha>("FigurinhaSet");
                }
                return _FigurinhaSet;
            }
        }
        private ObjectSet<Figurinha> _FigurinhaSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Usuario> UsuarioSet
        {
            get
            {
                if ((_UsuarioSet == null))
                {
                    _UsuarioSet = base.CreateObjectSet<Usuario>("UsuarioSet");
                }
                return _UsuarioSet;
            }
        }
        private ObjectSet<Usuario> _UsuarioSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Ofertas> OfertasSet
        {
            get
            {
                if ((_OfertasSet == null))
                {
                    _OfertasSet = base.CreateObjectSet<Ofertas>("OfertasSet");
                }
                return _OfertasSet;
            }
        }
        private ObjectSet<Ofertas> _OfertasSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Imagem> Imagens
        {
            get
            {
                if ((_Imagens == null))
                {
                    _Imagens = base.CreateObjectSet<Imagem>("Imagens");
                }
                return _Imagens;
            }
        }
        private ObjectSet<Imagem> _Imagens;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Album> AlbumSet
        {
            get
            {
                if ((_AlbumSet == null))
                {
                    _AlbumSet = base.CreateObjectSet<Album>("AlbumSet");
                }
                return _AlbumSet;
            }
        }
        private ObjectSet<Album> _AlbumSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Trocas> TrocasSet
        {
            get
            {
                if ((_TrocasSet == null))
                {
                    _TrocasSet = base.CreateObjectSet<Trocas>("TrocasSet");
                }
                return _TrocasSet;
            }
        }
        private ObjectSet<Trocas> _TrocasSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FigurinhasOfertadas> FigurinhasOfertadasSet
        {
            get
            {
                if ((_FigurinhasOfertadasSet == null))
                {
                    _FigurinhasOfertadasSet = base.CreateObjectSet<FigurinhasOfertadas>("FigurinhasOfertadasSet");
                }
                return _FigurinhasOfertadasSet;
            }
        }
        private ObjectSet<FigurinhasOfertadas> _FigurinhasOfertadasSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FigurinhasDesejadas> FigurinhasDesejadasSet
        {
            get
            {
                if ((_FigurinhasDesejadasSet == null))
                {
                    _FigurinhasDesejadasSet = base.CreateObjectSet<FigurinhasDesejadas>("FigurinhasDesejadasSet");
                }
                return _FigurinhasDesejadasSet;
            }
        }
        private ObjectSet<FigurinhasDesejadas> _FigurinhasDesejadasSet;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FigurinhaSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFigurinhaSet(Figurinha figurinha)
        {
            base.AddObject("FigurinhaSet", figurinha);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsuarioSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsuarioSet(Usuario usuario)
        {
            base.AddObject("UsuarioSet", usuario);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OfertasSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOfertasSet(Ofertas ofertas)
        {
            base.AddObject("OfertasSet", ofertas);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Imagens EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImagens(Imagem imagem)
        {
            base.AddObject("Imagens", imagem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AlbumSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlbumSet(Album album)
        {
            base.AddObject("AlbumSet", album);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrocasSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrocasSet(Trocas trocas)
        {
            base.AddObject("TrocasSet", trocas);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FigurinhasOfertadasSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFigurinhasOfertadasSet(FigurinhasOfertadas figurinhasOfertadas)
        {
            base.AddObject("FigurinhasOfertadasSet", figurinhasOfertadas);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FigurinhasDesejadasSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFigurinhasDesejadasSet(FigurinhasDesejadas figurinhasDesejadas)
        {
            base.AddObject("FigurinhasDesejadasSet", figurinhasDesejadas);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ModelDBFigurinhas", Name="Album")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Album : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Album object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="titulo">Initial value of the Titulo property.</param>
        /// <param name="descricao">Initial value of the Descricao property.</param>
        public static Album CreateAlbum(global::System.Int32 id, global::System.String titulo, global::System.String descricao)
        {
            Album album = new Album();
            album.Id = id;
            album.Titulo = titulo;
            album.Descricao = descricao;
            return album;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Titulo
        {
            get
            {
                return _Titulo;
            }
            set
            {
                OnTituloChanging(value);
                ReportPropertyChanging("Titulo");
                _Titulo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Titulo");
                OnTituloChanged();
            }
        }
        private global::System.String _Titulo;
        partial void OnTituloChanging(global::System.String value);
        partial void OnTituloChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Descricao
        {
            get
            {
                return _Descricao;
            }
            set
            {
                OnDescricaoChanging(value);
                ReportPropertyChanging("Descricao");
                _Descricao = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Descricao");
                OnDescricaoChanged();
            }
        }
        private global::System.String _Descricao;
        partial void OnDescricaoChanging(global::System.String value);
        partial void OnDescricaoChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModelDBFigurinhas", "AlbumFigurinha", "Figurinha")]
        public EntityCollection<Figurinha> Figurinhas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Figurinha>("ModelDBFigurinhas.AlbumFigurinha", "Figurinha");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Figurinha>("ModelDBFigurinhas.AlbumFigurinha", "Figurinha", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ModelDBFigurinhas", Name="Figurinha")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Figurinha : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Figurinha object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nome">Initial value of the Nome property.</param>
        /// <param name="equipe">Initial value of the Equipe property.</param>
        /// <param name="apelido">Initial value of the Apelido property.</param>
        public static Figurinha CreateFigurinha(global::System.Int32 id, global::System.String nome, global::System.String equipe, global::System.String apelido)
        {
            Figurinha figurinha = new Figurinha();
            figurinha.Id = id;
            figurinha.Nome = nome;
            figurinha.Equipe = equipe;
            figurinha.Apelido = apelido;
            return figurinha;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nome
        {
            get
            {
                return _Nome;
            }
            set
            {
                OnNomeChanging(value);
                ReportPropertyChanging("Nome");
                _Nome = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nome");
                OnNomeChanged();
            }
        }
        private global::System.String _Nome;
        partial void OnNomeChanging(global::System.String value);
        partial void OnNomeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Equipe
        {
            get
            {
                return _Equipe;
            }
            set
            {
                OnEquipeChanging(value);
                ReportPropertyChanging("Equipe");
                _Equipe = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Equipe");
                OnEquipeChanged();
            }
        }
        private global::System.String _Equipe;
        partial void OnEquipeChanging(global::System.String value);
        partial void OnEquipeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Apelido
        {
            get
            {
                return _Apelido;
            }
            set
            {
                OnApelidoChanging(value);
                ReportPropertyChanging("Apelido");
                _Apelido = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Apelido");
                OnApelidoChanged();
            }
        }
        private global::System.String _Apelido;
        partial void OnApelidoChanging(global::System.String value);
        partial void OnApelidoChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModelDBFigurinhas", "AlbumFigurinha", "Album")]
        public Album Album
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Album>("ModelDBFigurinhas.AlbumFigurinha", "Album").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Album>("ModelDBFigurinhas.AlbumFigurinha", "Album").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Album> AlbumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Album>("ModelDBFigurinhas.AlbumFigurinha", "Album");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Album>("ModelDBFigurinhas.AlbumFigurinha", "Album", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModelDBFigurinhas", "FigurinhaImagem", "Imagem")]
        public Imagem Imagem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Imagem>("ModelDBFigurinhas.FigurinhaImagem", "Imagem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Imagem>("ModelDBFigurinhas.FigurinhaImagem", "Imagem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Imagem> ImagemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Imagem>("ModelDBFigurinhas.FigurinhaImagem", "Imagem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Imagem>("ModelDBFigurinhas.FigurinhaImagem", "Imagem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModelDBFigurinhas", "FigurinhasOfertadasFigurinha", "FigurinhasOfertadas")]
        public EntityCollection<FigurinhasOfertadas> FigurinhasOfertadas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FigurinhasOfertadas>("ModelDBFigurinhas.FigurinhasOfertadasFigurinha", "FigurinhasOfertadas");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FigurinhasOfertadas>("ModelDBFigurinhas.FigurinhasOfertadasFigurinha", "FigurinhasOfertadas", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModelDBFigurinhas", "FigurinhasDesejadasFigurinha", "FigurinhasDesejadas")]
        public EntityCollection<FigurinhasDesejadas> FigurinhasDesejadas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FigurinhasDesejadas>("ModelDBFigurinhas.FigurinhasDesejadasFigurinha", "FigurinhasDesejadas");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FigurinhasDesejadas>("ModelDBFigurinhas.FigurinhasDesejadasFigurinha", "FigurinhasDesejadas", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ModelDBFigurinhas", Name="FigurinhasDesejadas")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FigurinhasDesejadas : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FigurinhasDesejadas object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="ofertasId">Initial value of the OfertasId property.</param>
        public static FigurinhasDesejadas CreateFigurinhasDesejadas(global::System.Int32 id, global::System.Int32 ofertasId)
        {
            FigurinhasDesejadas figurinhasDesejadas = new FigurinhasDesejadas();
            figurinhasDesejadas.Id = id;
            figurinhasDesejadas.OfertasId = ofertasId;
            return figurinhasDesejadas;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OfertasId
        {
            get
            {
                return _OfertasId;
            }
            set
            {
                OnOfertasIdChanging(value);
                ReportPropertyChanging("OfertasId");
                _OfertasId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OfertasId");
                OnOfertasIdChanged();
            }
        }
        private global::System.Int32 _OfertasId;
        partial void OnOfertasIdChanging(global::System.Int32 value);
        partial void OnOfertasIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModelDBFigurinhas", "FigurinhasDesejadasFigurinha", "Figurinha")]
        public Figurinha Figurinha
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Figurinha>("ModelDBFigurinhas.FigurinhasDesejadasFigurinha", "Figurinha").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Figurinha>("ModelDBFigurinhas.FigurinhasDesejadasFigurinha", "Figurinha").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Figurinha> FigurinhaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Figurinha>("ModelDBFigurinhas.FigurinhasDesejadasFigurinha", "Figurinha");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Figurinha>("ModelDBFigurinhas.FigurinhasDesejadasFigurinha", "Figurinha", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModelDBFigurinhas", "OfertasFigurinhasDesejadas", "Ofertas")]
        public Ofertas Ofertas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ofertas>("ModelDBFigurinhas.OfertasFigurinhasDesejadas", "Ofertas").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ofertas>("ModelDBFigurinhas.OfertasFigurinhasDesejadas", "Ofertas").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ofertas> OfertasReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ofertas>("ModelDBFigurinhas.OfertasFigurinhasDesejadas", "Ofertas");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ofertas>("ModelDBFigurinhas.OfertasFigurinhasDesejadas", "Ofertas", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ModelDBFigurinhas", Name="FigurinhasOfertadas")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FigurinhasOfertadas : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FigurinhasOfertadas object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="ofertasId">Initial value of the OfertasId property.</param>
        public static FigurinhasOfertadas CreateFigurinhasOfertadas(global::System.Int32 id, global::System.Int32 ofertasId)
        {
            FigurinhasOfertadas figurinhasOfertadas = new FigurinhasOfertadas();
            figurinhasOfertadas.Id = id;
            figurinhasOfertadas.OfertasId = ofertasId;
            return figurinhasOfertadas;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OfertasId
        {
            get
            {
                return _OfertasId;
            }
            set
            {
                OnOfertasIdChanging(value);
                ReportPropertyChanging("OfertasId");
                _OfertasId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OfertasId");
                OnOfertasIdChanged();
            }
        }
        private global::System.Int32 _OfertasId;
        partial void OnOfertasIdChanging(global::System.Int32 value);
        partial void OnOfertasIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModelDBFigurinhas", "FigurinhasOfertadasFigurinha", "Figurinha")]
        public Figurinha Figurinha
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Figurinha>("ModelDBFigurinhas.FigurinhasOfertadasFigurinha", "Figurinha").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Figurinha>("ModelDBFigurinhas.FigurinhasOfertadasFigurinha", "Figurinha").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Figurinha> FigurinhaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Figurinha>("ModelDBFigurinhas.FigurinhasOfertadasFigurinha", "Figurinha");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Figurinha>("ModelDBFigurinhas.FigurinhasOfertadasFigurinha", "Figurinha", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModelDBFigurinhas", "OfertasFigurinhasOfertadas", "Ofertas")]
        public Ofertas Ofertas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ofertas>("ModelDBFigurinhas.OfertasFigurinhasOfertadas", "Ofertas").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ofertas>("ModelDBFigurinhas.OfertasFigurinhasOfertadas", "Ofertas").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ofertas> OfertasReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ofertas>("ModelDBFigurinhas.OfertasFigurinhasOfertadas", "Ofertas");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ofertas>("ModelDBFigurinhas.OfertasFigurinhasOfertadas", "Ofertas", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ModelDBFigurinhas", Name="Imagem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Imagem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Imagem object.
        /// </summary>
        /// <param name="codigo">Initial value of the Codigo property.</param>
        /// <param name="nomeArquivo">Initial value of the NomeArquivo property.</param>
        public static Imagem CreateImagem(global::System.Int32 codigo, global::System.String nomeArquivo)
        {
            Imagem imagem = new Imagem();
            imagem.Codigo = codigo;
            imagem.NomeArquivo = nomeArquivo;
            return imagem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Codigo
        {
            get
            {
                return _Codigo;
            }
            set
            {
                if (_Codigo != value)
                {
                    OnCodigoChanging(value);
                    ReportPropertyChanging("Codigo");
                    _Codigo = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Codigo");
                    OnCodigoChanged();
                }
            }
        }
        private global::System.Int32 _Codigo;
        partial void OnCodigoChanging(global::System.Int32 value);
        partial void OnCodigoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NomeArquivo
        {
            get
            {
                return _NomeArquivo;
            }
            set
            {
                OnNomeArquivoChanging(value);
                ReportPropertyChanging("NomeArquivo");
                _NomeArquivo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NomeArquivo");
                OnNomeArquivoChanged();
            }
        }
        private global::System.String _NomeArquivo;
        partial void OnNomeArquivoChanging(global::System.String value);
        partial void OnNomeArquivoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descricao
        {
            get
            {
                return _Descricao;
            }
            set
            {
                OnDescricaoChanging(value);
                ReportPropertyChanging("Descricao");
                _Descricao = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descricao");
                OnDescricaoChanged();
            }
        }
        private global::System.String _Descricao;
        partial void OnDescricaoChanging(global::System.String value);
        partial void OnDescricaoChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModelDBFigurinhas", "FigurinhaImagem", "Figurinha")]
        public Figurinha Figurinha
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Figurinha>("ModelDBFigurinhas.FigurinhaImagem", "Figurinha").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Figurinha>("ModelDBFigurinhas.FigurinhaImagem", "Figurinha").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Figurinha> FigurinhaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Figurinha>("ModelDBFigurinhas.FigurinhaImagem", "Figurinha");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Figurinha>("ModelDBFigurinhas.FigurinhaImagem", "Figurinha", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ModelDBFigurinhas", Name="Ofertas")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ofertas : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ofertas object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Ofertas CreateOfertas(global::System.Int32 id)
        {
            Ofertas ofertas = new Ofertas();
            ofertas.Id = id;
            return ofertas;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModelDBFigurinhas", "UsuariosOfertas", "Usuarios")]
        public Usuario Usuario
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usuario>("ModelDBFigurinhas.UsuariosOfertas", "Usuarios").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usuario>("ModelDBFigurinhas.UsuariosOfertas", "Usuarios").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Usuario> UsuarioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usuario>("ModelDBFigurinhas.UsuariosOfertas", "Usuarios");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Usuario>("ModelDBFigurinhas.UsuariosOfertas", "Usuarios", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModelDBFigurinhas", "OfertasTrocas", "Trocas")]
        public Trocas TrocaSolicitante
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trocas>("ModelDBFigurinhas.OfertasTrocas", "Trocas").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trocas>("ModelDBFigurinhas.OfertasTrocas", "Trocas").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Trocas> TrocaSolicitanteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trocas>("ModelDBFigurinhas.OfertasTrocas", "Trocas");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Trocas>("ModelDBFigurinhas.OfertasTrocas", "Trocas", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModelDBFigurinhas", "OfertasTrocas1", "Trocas")]
        public Trocas TrocasSolicitado
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trocas>("ModelDBFigurinhas.OfertasTrocas1", "Trocas").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trocas>("ModelDBFigurinhas.OfertasTrocas1", "Trocas").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Trocas> TrocasSolicitadoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trocas>("ModelDBFigurinhas.OfertasTrocas1", "Trocas");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Trocas>("ModelDBFigurinhas.OfertasTrocas1", "Trocas", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModelDBFigurinhas", "OfertasFigurinhasOfertadas", "FigurinhasOfertadas")]
        public EntityCollection<FigurinhasOfertadas> FigurinhasOfertadas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FigurinhasOfertadas>("ModelDBFigurinhas.OfertasFigurinhasOfertadas", "FigurinhasOfertadas");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FigurinhasOfertadas>("ModelDBFigurinhas.OfertasFigurinhasOfertadas", "FigurinhasOfertadas", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModelDBFigurinhas", "OfertasFigurinhasDesejadas", "FigurinhasDesejadas")]
        public EntityCollection<FigurinhasDesejadas> FigurinhasDesejadas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FigurinhasDesejadas>("ModelDBFigurinhas.OfertasFigurinhasDesejadas", "FigurinhasDesejadas");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FigurinhasDesejadas>("ModelDBFigurinhas.OfertasFigurinhasDesejadas", "FigurinhasDesejadas", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ModelDBFigurinhas", Name="Trocas")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Trocas : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Trocas object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="dataDaSolicitacao">Initial value of the DataDaSolicitacao property.</param>
        public static Trocas CreateTrocas(global::System.Int32 id, global::System.DateTime dataDaSolicitacao)
        {
            Trocas trocas = new Trocas();
            trocas.Id = id;
            trocas.DataDaSolicitacao = dataDaSolicitacao;
            return trocas;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DataDaSolicitacao
        {
            get
            {
                return _DataDaSolicitacao;
            }
            set
            {
                OnDataDaSolicitacaoChanging(value);
                ReportPropertyChanging("DataDaSolicitacao");
                _DataDaSolicitacao = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataDaSolicitacao");
                OnDataDaSolicitacaoChanged();
            }
        }
        private global::System.DateTime _DataDaSolicitacao;
        partial void OnDataDaSolicitacaoChanging(global::System.DateTime value);
        partial void OnDataDaSolicitacaoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DataDaTroca
        {
            get
            {
                return _DataDaTroca;
            }
            set
            {
                OnDataDaTrocaChanging(value);
                ReportPropertyChanging("DataDaTroca");
                _DataDaTroca = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataDaTroca");
                OnDataDaTrocaChanged();
            }
        }
        private Nullable<global::System.DateTime> _DataDaTroca;
        partial void OnDataDaTrocaChanging(Nullable<global::System.DateTime> value);
        partial void OnDataDaTrocaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean TrocaRealizada
        {
            get
            {
                return _TrocaRealizada;
            }
            set
            {
                OnTrocaRealizadaChanging(value);
                ReportPropertyChanging("TrocaRealizada");
                _TrocaRealizada = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrocaRealizada");
                OnTrocaRealizadaChanged();
            }
        }
        private global::System.Boolean _TrocaRealizada = false;
        partial void OnTrocaRealizadaChanging(global::System.Boolean value);
        partial void OnTrocaRealizadaChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModelDBFigurinhas", "OfertasTrocas", "Ofertas")]
        public Ofertas OfertaSolicitante
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ofertas>("ModelDBFigurinhas.OfertasTrocas", "Ofertas").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ofertas>("ModelDBFigurinhas.OfertasTrocas", "Ofertas").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ofertas> OfertaSolicitanteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ofertas>("ModelDBFigurinhas.OfertasTrocas", "Ofertas");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ofertas>("ModelDBFigurinhas.OfertasTrocas", "Ofertas", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModelDBFigurinhas", "OfertasTrocas1", "Ofertas")]
        public Ofertas OfertaSolicitado
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ofertas>("ModelDBFigurinhas.OfertasTrocas1", "Ofertas").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ofertas>("ModelDBFigurinhas.OfertasTrocas1", "Ofertas").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ofertas> OfertaSolicitadoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ofertas>("ModelDBFigurinhas.OfertasTrocas1", "Ofertas");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ofertas>("ModelDBFigurinhas.OfertasTrocas1", "Ofertas", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ModelDBFigurinhas", Name="Usuario")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Usuario : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Usuario object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nome">Initial value of the Nome property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="senha">Initial value of the Senha property.</param>
        public static Usuario CreateUsuario(global::System.Int32 id, global::System.String nome, global::System.String email, global::System.String login, global::System.String senha)
        {
            Usuario usuario = new Usuario();
            usuario.Id = id;
            usuario.Nome = nome;
            usuario.Email = email;
            usuario.Login = login;
            usuario.Senha = senha;
            return usuario;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nome
        {
            get
            {
                return _Nome;
            }
            set
            {
                OnNomeChanging(value);
                ReportPropertyChanging("Nome");
                _Nome = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nome");
                OnNomeChanged();
            }
        }
        private global::System.String _Nome;
        partial void OnNomeChanging(global::System.String value);
        partial void OnNomeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Senha
        {
            get
            {
                return _Senha;
            }
            set
            {
                OnSenhaChanging(value);
                ReportPropertyChanging("Senha");
                _Senha = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Senha");
                OnSenhaChanged();
            }
        }
        private global::System.String _Senha;
        partial void OnSenhaChanging(global::System.String value);
        partial void OnSenhaChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModelDBFigurinhas", "UsuariosOfertas", "Ofertas")]
        public EntityCollection<Ofertas> Ofertas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ofertas>("ModelDBFigurinhas.UsuariosOfertas", "Ofertas");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ofertas>("ModelDBFigurinhas.UsuariosOfertas", "Ofertas", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
